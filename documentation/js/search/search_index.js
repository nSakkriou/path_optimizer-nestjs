var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddressDeleteGetDTO.html",[0,0.098,1,1.906]],["body/classes/AddressDeleteGetDTO.html",[0,0.122,1,2.992,2,1.716,3,0.406,4,0.344,5,0.344,6,3.148,7,0.54,8,1.605,9,2.133,10,4.323,11,1.755,12,0.968,13,0.036,14,1.514,15,1.077,16,3.813,17,3.813,18,0.406,19,0.029,20,0.029]],["title/classes/AddressPostDTO.html",[0,0.098,21,1.906]],["body/classes/AddressPostDTO.html",[0,0.109,2,1.532,3,0.363,4,0.307,5,0.307,7,0.482,8,1.492,9,2.214,11,1.663,12,1.064,13,0.035,14,1.451,15,1.184,18,0.363,19,0.027,20,0.027,21,2.782,22,2.81,23,3.527,24,3.1,25,3.1,26,3.404,27,3.741,28,3.404,29,3.404,30,3.404]],["title/controllers/AddressesController.html",[31,1.127,32,1.906]],["body/controllers/AddressesController.html",[0,0.059,1,3.222,3,0.197,4,0.167,5,0.167,7,0.262,9,0.683,12,0.92,13,0.038,15,1.024,18,0.197,19,0.018,20,0.018,21,2.482,23,1.314,24,1.155,25,1.155,31,0.683,32,1.795,33,0.683,34,1.527,35,1.314,36,1.85,37,1.061,38,2.372,39,2.372,40,2.372,41,2.372,42,2.372,43,2.372,44,1.85,45,2.845,46,2.909,47,1.85,48,2.05,49,2.05,50,1.682,51,3.842,52,1.682,53,1.85,54,2.201,55,1.85,56,1.85,57,1.593,58,1.85,59,3.76,60,1.85,61,1.85,62,1.85,63,1.85,64,1.85,65,1.85,66,1.85,67,1.85,68,1.85,69,1.069,70,0.461,71,1.759,72,1.527,73,1.85,74,1.85,75,1.293,76,1.314,77,1.527,78,2.372,79,1.314,80,1.314,81,1.85,82,1.155,83,1.85,84,1.155,85,2.372,86,1.029,87,1.85,88,1.85,89,1.85,90,1.682,91,1.85,92,1.85,93,1.85,94,3.524,95,1.85,96,1.85,97,1.527,98,1.527,99,1.85,100,1.85,101,1.85,102,1.85,103,1.85,104,1.85,105,1.85,106,1.85,107,1.85]],["title/modules/AddressesModule.html",[108,1.127,109,1.697]],["body/modules/AddressesModule.html",[0,0.111,3,0.371,4,0.315,5,0.315,13,0.037,18,0.371,19,0.028,20,0.028,32,3.136,33,1.67,69,1.129,70,0.869,71,2.815,72,2.877,108,1.854,109,3.137,110,1.569,111,1.569,112,1.938,113,1.938,114,1.569,115,2.792,116,1.938,117,2.877,118,2.877,119,2.515,120,1.938,121,1.938,122,3.485,123,3.485]],["title/injectables/AddressesService.html",[71,1.523,124,1.127]],["body/injectables/AddressesService.html",[0,0.033,3,0.487,4,0.092,5,0.092,7,0.144,10,3.923,11,1.766,12,0.689,13,0.038,14,1.587,15,0.767,18,0.108,19,0.011,20,0.011,37,0.649,38,1.451,39,1.451,40,1.451,41,1.451,42,1.451,43,1.451,48,1.536,49,1.536,50,1.26,52,1.26,54,1.449,59,2.816,69,0.522,70,0.254,71,0.877,75,1.646,76,0.723,84,2.131,85,3.851,86,2.15,90,1.647,97,0.84,98,3.191,124,0.649,125,0.566,126,0.84,127,1.758,128,1.018,129,3.169,130,3.169,131,2.131,132,1.758,133,1.018,134,1.758,135,1.018,136,1.758,137,1.018,138,1.758,139,1.018,140,1.758,141,1.018,142,0.508,143,0.723,144,2.131,145,2.424,146,3.53,147,2.424,148,2.284,149,2.424,150,1.018,151,3.339,152,1.963,153,1.018,154,1.758,155,3.019,156,2.131,157,2.424,158,2.424,159,2.747,160,2.598,161,1.018,162,1.018,163,1.915,164,1.451,165,2.321,166,3.412,167,1.758,168,2.321,169,1.758,170,1.018,171,1.018,172,2.762,173,1.018,174,1.758,175,0.723]],["title/controllers/AppController.html",[31,1.127,176,1.906]],["body/controllers/AppController.html",[0,0.119,3,0.396,4,0.335,5,0.335,7,0.526,9,1.372,13,0.037,15,0.836,18,0.396,19,0.029,20,0.029,31,1.74,33,1.372,37,1.74,45,2.321,52,1.372,69,1.06,70,0.926,82,2.321,90,1.372,176,2.944,177,3.068,178,4.492,179,3.716,180,2.582,181,3.068,182,3.716]],["title/modules/AppModule.html",[108,1.127,183,1.906]],["body/modules/AppModule.html",[0,0.093,3,0.309,4,0.262,5,0.262,13,0.037,18,0.309,19,0.025,20,0.025,33,1.478,69,1.203,70,0.723,108,1.691,109,2.976,110,1.306,111,1.306,112,1.614,113,1.614,114,1.306,115,2.546,116,1.614,119,2.225,120,1.614,121,1.614,176,2.86,180,2.671,181,2.396,183,3.651,184,2.396,185,2.396,186,2.396,187,2.976,188,2.976,189,2.903,190,4.001,191,2.903,192,2.903,193,2.903,194,2.903]],["title/injectables/AppService.html",[124,1.127,180,1.523]],["body/injectables/AppService.html",[0,0.122,3,0.406,4,0.344,5,0.344,7,0.54,13,0.037,14,1.051,15,0.857,18,0.406,19,0.029,20,0.029,37,1.769,52,1.408,69,0.857,70,0.95,90,1.408,124,1.769,125,2.12,178,3.954,180,2.39,195,3.148,196,5.493,197,3.813,198,3.813,199,3.813]],["title/controllers/BuildController.html",[31,1.127,200,1.906]],["body/controllers/BuildController.html",[0,0.109,3,0.364,4,0.309,5,0.309,7,0.484,9,1.263,12,0.691,13,0.037,15,0.769,18,0.364,19,0.028,20,0.028,31,1.263,33,1.263,35,2.43,37,1.65,45,2.136,48,1.539,49,1.539,50,1.263,51,3.535,52,1.263,57,1.768,69,1.119,70,0.852,80,2.43,82,2.136,90,1.263,200,2.79,201,2.823,202,4.107,203,3.42,204,3.42,205,2.482,206,2.823,207,3.42,208,3.42,209,3.42]],["title/modules/BuildModule.html",[108,1.127,187,1.697]],["body/modules/BuildModule.html",[0,0.111,3,0.371,4,0.315,5,0.315,13,0.037,18,0.371,19,0.028,20,0.028,33,1.67,69,1.129,70,0.869,108,1.854,110,1.569,111,1.569,112,1.938,113,1.938,114,1.569,115,2.792,116,1.938,119,2.515,120,1.938,121,1.938,187,3.137,200,3.136,205,2.815,206,2.877,210,2.877,211,2.877,212,3.485,213,3.485]],["title/injectables/BuildService.html",[124,1.127,205,1.523]],["body/injectables/BuildService.html",[0,0.05,3,0.334,4,0.14,5,0.14,7,0.22,11,1.207,12,0.798,13,0.038,14,1.163,15,0.888,18,0.165,19,0.015,20,0.015,24,1.961,25,1.961,27,1.776,37,0.923,48,1.778,49,1.778,50,1.459,52,1.459,69,0.81,70,0.387,75,2.079,76,1.102,84,3.058,86,0.862,90,1.459,124,0.923,125,0.862,129,1.776,130,1.776,131,0.969,142,0.774,143,1.102,144,0.969,145,1.102,146,2.231,147,1.102,148,1.561,149,1.102,151,1.28,152,1.102,155,1.28,156,1.561,157,1.102,158,1.102,159,1.102,160,1.102,163,1.28,202,2.973,205,1.247,214,1.28,215,2.5,216,2.5,217,2.5,218,2.5,219,2.5,220,1.551,221,2.5,222,2.783,223,1.551,224,2.559,225,2.5,226,2.5,227,3.14,228,1.551,229,1.551,230,1.551,231,1.551,232,2.5,233,1.551,234,1.551,235,1.551,236,2.5,237,1.551,238,1.551,239,1.551,240,1.551,241,1.551,242,1.551,243,1.551,244,1.551,245,1.551,246,1.551,247,1.551,248,1.551,249,1.551,250,1.551,251,2.806,252,1.551,253,1.551,254,1.551,255,2.5,256,1.551,257,2.5,258,1.551,259,3.601,260,1.551,261,1.551,262,1.551,263,1.551,264,2.5,265,2.063,266,1.551,267,1.551,268,2.063,269,1.551,270,1.551,271,1.551,272,2.5,273,1.551,274,2.5,275,2.5,276,1.102,277,1.551,278,1.551,279,1.551,280,1.551,281,1.551]],["title/classes/GlobalService.html",[0,0.098,142,1.523]],["body/classes/GlobalService.html",[0,0.101,2,1.419,3,0.336,4,0.285,5,0.285,7,0.447,8,1.419,11,1.712,12,0.855,13,0.038,14,1.317,15,0.952,18,0.336,19,0.026,20,0.026,37,1.564,48,1.419,49,1.419,50,1.165,52,1.165,69,0.709,90,1.564,131,1.97,142,2.113,144,2.644,148,1.97,156,1.97,175,2.241,222,1.754,224,3.396,268,3.945,276,2.241,282,2.603,283,5.486,284,3.154,285,3.154,286,3.154,287,3.154,288,4.234,289,3.154,290,3.154,291,3.154]],["title/interfaces/Graph.html",[222,1.697,292,1.697]],["body/interfaces/Graph.html",[3,0.37,4,0.313,5,0.313,7,0.491,8,1.511,11,1.777,12,1.072,13,0.037,14,1.38,18,0.37,19,0.028,20,0.028,50,1.665,69,0.78,75,2.387,222,2.507,292,1.929,293,2.464,294,2.863,295,4.378,296,4.378,297,5.303,298,5.635,299,3.469]],["title/interfaces/GraphNode.html",[75,1.373,292,1.697]],["body/interfaces/GraphNode.html",[3,0.359,4,0.304,5,0.304,7,0.478,8,1.483,12,1.151,13,0.036,14,1.541,18,0.359,19,0.027,20,0.027,23,3.727,24,3.277,25,3.277,27,3.973,50,1.635,75,1.992,86,2.917,292,1.875,293,2.396,300,2.784,301,5.246,302,4.426]],["title/classes/SessionTokenDTO.html",[0,0.098,57,1.023]],["body/classes/SessionTokenDTO.html",[0,0.131,2,1.842,3,0.436,4,0.369,5,0.369,7,0.579,8,1.677,9,1.996,11,1.811,12,0.827,13,0.035,14,1.379,15,0.92,18,0.436,19,0.031,20,0.031,57,1.677,303,3.377,304,4.091]],["title/classes/SessionTokenDTO-1.html",[0,0.082,57,0.858,305,2.56]],["body/classes/SessionTokenDTO-1.html",[0,0.131,2,1.842,3,0.436,4,0.369,5,0.369,7,0.579,8,1.677,9,1.996,11,1.811,12,0.827,13,0.035,14,1.379,15,0.92,18,0.436,19,0.031,20,0.031,57,1.677,306,3.377,307,4.091]],["title/classes/SessionTokenDTO-2.html",[0,0.082,57,0.858,251,1.819]],["body/classes/SessionTokenDTO-2.html",[0,0.131,2,1.842,3,0.436,4,0.369,5,0.369,7,0.579,8,1.677,9,1.996,11,1.811,12,0.827,13,0.035,14,1.379,15,0.92,18,0.436,19,0.031,20,0.031,57,1.677,308,3.377,309,4.091]],["title/controllers/SessionsController.html",[31,1.127,310,1.906]],["body/controllers/SessionsController.html",[0,0.09,3,0.301,4,0.255,5,0.255,7,0.4,9,1.043,12,0.793,13,0.038,15,1.015,18,0.301,19,0.024,20,0.024,31,1.043,33,1.043,35,2.006,37,1.45,45,2.819,46,3.725,48,1.767,49,1.767,50,1.45,51,3.642,52,1.667,54,2.819,57,1.824,69,1.015,70,0.704,80,2.006,82,1.764,90,1.667,310,2.452,311,2.331,312,2.824,313,4.026,314,3.241,315,3.241,316,2.824,317,2.824,318,2.824,319,2.824,320,2.824,321,2.824,322,1.959,323,2.331,324,2.824,325,2.824,326,2.824,327,2.824,328,2.824,329,2.824,330,2.824]],["title/modules/SessionsModule.html",[108,1.127,188,1.697]],["body/modules/SessionsModule.html",[0,0.111,3,0.371,4,0.315,5,0.315,13,0.037,18,0.371,19,0.028,20,0.028,33,1.67,69,1.129,70,0.869,108,1.854,110,1.569,111,1.569,112,1.938,113,1.938,114,1.569,115,2.792,116,1.938,119,2.515,120,1.938,121,1.938,188,3.137,310,3.136,322,2.815,323,2.877,331,2.877,332,2.877,333,3.485,334,3.485]],["title/injectables/SessionsService.html",[124,1.127,322,1.523]],["body/injectables/SessionsService.html",[0,0.058,3,0.504,4,0.165,5,0.165,7,0.259,11,1.828,12,0.575,13,0.038,14,1.486,15,0.786,18,0.195,19,0.018,20,0.018,37,1.051,48,1.281,49,1.281,50,1.051,52,1.291,54,1.778,69,0.786,70,0.455,77,1.508,78,2.349,79,1.298,84,1.778,86,1.582,90,1.674,124,1.051,125,1.016,129,3.22,130,3.22,131,2.184,142,0.911,143,1.298,144,1.141,145,1.298,146,3.572,147,2.484,148,2.184,149,1.298,152,2.484,156,2.184,157,3.04,158,2.022,159,2.022,160,2.022,164,1.508,175,2.804,224,3.22,276,2.484,295,1.508,296,1.508,313,3.258,314,2.349,315,2.349,322,1.42,335,1.508,336,1.827,337,2.846,338,1.827,339,2.846,340,1.827,341,1.827,342,3.496,343,2.846,344,1.827,345,1.827,346,2.846,347,1.827,348,2.846]],["title/coverage.html",[349,2.942]],["body/coverage.html",[0,0.168,1,1.724,5,0.249,6,2.278,12,0.558,13,0.037,19,0.024,20,0.024,21,1.724,22,2.278,31,1.784,32,1.724,34,2.278,57,1.494,71,1.377,75,1.242,114,1.242,124,1.784,126,2.278,142,1.377,176,1.724,177,2.278,180,1.377,195,2.278,200,1.724,201,2.278,205,1.377,214,2.278,222,1.535,265,4.929,282,2.278,292,2.148,294,2.278,300,2.278,303,2.278,306,2.278,308,2.278,310,1.724,311,2.278,322,1.377,335,2.278,349,1.961,350,2.76,351,2.76,352,2.76,353,3.864,354,3.864,355,3.864,356,5.268,357,3.864,358,2.278,359,2.76,360,2.76,361,3.864,362,2.76,363,2.76,364,2.76]],["title/dependencies.html",[111,1.649,365,2.113]],["body/dependencies.html",[13,0.037,19,0.031,20,0.031,70,1.043,79,2.974,111,1.884,366,5.675,367,4.185,368,4.185,369,4.185,370,4.185,371,4.185,372,4.185,373,4.185,374,4.185]],["title/miscellaneous/functions.html",[375,2.113,376,3.024]],["body/miscellaneous/functions.html",[7,0.64,13,0.033,19,0.033,20,0.033,114,2.539,358,3.733,375,3.733,376,3.733,377,4.523]],["title/index.html",[7,0.363,378,2.56,379,2.56]],["body/index.html",[4,0.268,13,0.037,19,0.025,20,0.025,349,2.113,380,2.974,381,2.974,382,4.068,383,2.974,384,2.974,385,2.974,386,2.974,387,2.974,388,2.974,389,2.455,390,4.637,391,2.974,392,2.974,393,2.974,394,2.974,395,5.52,396,2.974,397,2.974,398,2.974,399,5.392,400,2.974,401,2.974,402,4.068,403,2.974,404,2.974,405,2.974,406,2.974,407,4.068,408,4.068,409,2.974,410,2.974,411,2.974,412,4.068,413,4.068,414,2.974,415,2.974,416,2.974,417,2.974,418,2.974,419,2.455,420,2.974,421,2.974,422,2.974,423,2.974,424,2.974,425,2.974,426,2.974,427,2.974,428,2.974,429,2.974,430,2.455,431,2.974,432,2.974,433,2.974,434,2.974,435,2.974,436,2.974,437,2.455]],["title/modules.html",[110,1.864]],["body/modules.html",[13,0.031,19,0.031,20,0.031,109,2.327,110,1.884,183,2.614,187,2.327,188,2.327,419,4.684,438,5.675,439,5.675,440,5.675]],["title/overview.html",[441,3.418]],["body/overview.html",[2,1.438,13,0.036,19,0.026,20,0.026,33,1.18,71,2.401,108,1.18,109,2.976,110,1.438,111,1.438,112,1.777,113,1.777,114,1.438,115,1.777,116,1.777,117,2.637,118,2.637,119,2.375,120,1.777,121,1.777,125,1.777,180,2.401,183,3.651,184,2.637,185,2.637,186,2.637,187,2.976,188,2.976,205,2.401,210,2.637,211,2.637,251,2.27,293,2.27,322,2.401,331,2.637,332,2.637,441,2.637,442,4.811,443,3.195]],["title/properties.html",[8,1.228,365,2.113]],["body/properties.html",[8,1.488,13,0.037,19,0.032,20,0.032,389,3.665,430,3.665,437,3.665,444,4.44,445,4.44,446,4.44]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":265,"title":{},"body":{"injectables/BuildService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":445,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":305,"title":{"classes/SessionTokenDTO-1.html":{}},"body":{}}],["2",{"_index":251,"title":{"classes/SessionTokenDTO-2.html":{}},"body":{"injectables/BuildService.html":{},"overview.html":{}}}],["4",{"_index":442,"title":{},"body":{"overview.html":{}}}],["6",{"_index":443,"title":{},"body":{"overview.html":{}}}],["6371",{"_index":258,"title":{},"body":{"injectables/BuildService.html":{}}}],["7.2.0",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["a[1",{"_index":266,"title":{},"body":{"injectables/BuildService.html":{}}}],["action",{"_index":129,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["add",{"_index":97,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["addaddress",{"_index":38,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["addaddress(@body",{"_index":83,"title":{},"body":{"controllers/AddressesController.html":{}}}],["addaddress(body",{"_index":44,"title":{},"body":{"controllers/AddressesController.html":{}}}],["addaddress(session_token",{"_index":127,"title":{},"body":{"injectables/AddressesService.html":{}}}],["added",{"_index":153,"title":{},"body":{"injectables/AddressesService.html":{}}}],["address",{"_index":59,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["address_id",{"_index":10,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"injectables/AddressesService.html":{}}}],["addressdeletegetdto",{"_index":1,"title":{"classes/AddressDeleteGetDTO.html":{}},"body":{"classes/AddressDeleteGetDTO.html":{},"controllers/AddressesController.html":{},"coverage.html":{}}}],["addresses",{"_index":36,"title":{},"body":{"controllers/AddressesController.html":{}}}],["addresses.controller",{"_index":123,"title":{},"body":{"modules/AddressesModule.html":{}}}],["addresses.service",{"_index":72,"title":{},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{}}}],["addresses/addresses.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["addressescontroller",{"_index":32,"title":{"controllers/AddressesController.html":{}},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"coverage.html":{}}}],["addressesmodule",{"_index":109,"title":{"modules/AddressesModule.html":{}},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["addressesservice",{"_index":71,"title":{"injectables/AddressesService.html":{}},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"coverage.html":{},"overview.html":{}}}],["addresspostdto",{"_index":21,"title":{"classes/AddressPostDTO.html":{}},"body":{"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"coverage.html":{}}}],["amazing",{"_index":420,"title":{},"body":{"index.html":{}}}],["app",{"_index":397,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":176,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":388,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":183,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":180,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":298,"title":{},"body":{"interfaces/Graph.html":{}}}],["author",{"_index":430,"title":{},"body":{"index.html":{},"properties.html":{}}}],["b[1",{"_index":267,"title":{},"body":{"injectables/BuildService.html":{}}}],["backers",{"_index":421,"title":{},"body":{"index.html":{}}}],["body",{"_index":51,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/BuildController.html":{},"controllers/SessionsController.html":{}}}],["body.address_id",{"_index":94,"title":{},"body":{"controllers/AddressesController.html":{}}}],["body.label",{"_index":87,"title":{},"body":{"controllers/AddressesController.html":{}}}],["body.lat",{"_index":89,"title":{},"body":{"controllers/AddressesController.html":{}}}],["body.lon",{"_index":88,"title":{},"body":{"controllers/AddressesController.html":{}}}],["boolean",{"_index":131,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"injectables/SessionsService.html":{}}}],["bootstrap",{"_index":114,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":272,"title":{},"body":{"injectables/BuildService.html":{}}}],["browse",{"_index":440,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":438,"title":{},"body":{"modules.html":{}}}],["build",{"_index":202,"title":{},"body":{"controllers/BuildController.html":{},"injectables/BuildService.html":{}}}],["build(@body",{"_index":208,"title":{},"body":{"controllers/BuildController.html":{}}}],["build(body",{"_index":203,"title":{},"body":{"controllers/BuildController.html":{}}}],["build(session_token",{"_index":219,"title":{},"body":{"injectables/BuildService.html":{}}}],["build.controller",{"_index":213,"title":{},"body":{"modules/BuildModule.html":{}}}],["build.service",{"_index":206,"title":{},"body":{"controllers/BuildController.html":{},"modules/BuildModule.html":{}}}],["build/build.module",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["buildcontroller",{"_index":200,"title":{"controllers/BuildController.html":{}},"body":{"controllers/BuildController.html":{},"modules/BuildModule.html":{},"coverage.html":{}}}],["building",{"_index":383,"title":{},"body":{"index.html":{}}}],["buildmodule",{"_index":187,"title":{"modules/BuildModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules.html":{},"overview.html":{}}}],["buildservice",{"_index":205,"title":{"injectables/BuildService.html":{}},"body":{"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":255,"title":{},"body":{"injectables/BuildService.html":{}}}],["calc",{"_index":249,"title":{},"body":{"injectables/BuildService.html":{}}}],["calcalldistance",{"_index":215,"title":{},"body":{"injectables/BuildService.html":{}}}],["calcalldistance(session",{"_index":221,"title":{},"body":{"injectables/BuildService.html":{}}}],["calcdistance",{"_index":216,"title":{},"body":{"injectables/BuildService.html":{}}}],["calcdistance(node1",{"_index":226,"title":{},"body":{"injectables/BuildService.html":{}}}],["catch",{"_index":348,"title":{},"body":{"injectables/SessionsService.html":{}}}],["class",{"_index":0,"title":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"classes/GlobalService.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{}},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"classes/GlobalService.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"overview.html":{}}}],["cluster_addressesmodule",{"_index":117,"title":{},"body":{"modules/AddressesModule.html":{},"overview.html":{}}}],["cluster_addressesmodule_providers",{"_index":118,"title":{},"body":{"modules/AddressesModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_buildmodule",{"_index":210,"title":{},"body":{"modules/BuildModule.html":{},"overview.html":{}}}],["cluster_buildmodule_providers",{"_index":211,"title":{},"body":{"modules/BuildModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule",{"_index":331,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["cluster_sessionsmodule_providers",{"_index":332,"title":{},"body":{"modules/SessionsModule.html":{},"overview.html":{}}}],["connexion",{"_index":301,"title":{},"body":{"interfaces/GraphNode.html":{}}}],["const",{"_index":84,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["constructor(private",{"_index":82,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AppController.html":{},"controllers/BuildController.html":{},"controllers/SessionsController.html":{}}}],["controller",{"_index":31,"title":{"controllers/AddressesController.html":{},"controllers/AppController.html":{},"controllers/BuildController.html":{},"controllers/SessionsController.html":{}},"body":{"controllers/AddressesController.html":{},"controllers/AppController.html":{},"controllers/BuildController.html":{},"controllers/SessionsController.html":{},"coverage.html":{}}}],["controller('addresses",{"_index":81,"title":{},"body":{"controllers/AddressesController.html":{}}}],["controller('build",{"_index":207,"title":{},"body":{"controllers/BuildController.html":{}}}],["controller('sessions",{"_index":324,"title":{},"body":{"controllers/SessionsController.html":{}}}],["controllers",{"_index":33,"title":{},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}],["correctly",{"_index":152,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["coverage",{"_index":349,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":345,"title":{},"body":{"injectables/SessionsService.html":{}}}],["created",{"_index":347,"title":{},"body":{"injectables/SessionsService.html":{}}}],["createorderedgraph",{"_index":217,"title":{},"body":{"injectables/BuildService.html":{}}}],["createorderedgraph(session",{"_index":230,"title":{},"body":{"injectables/BuildService.html":{}}}],["createsession",{"_index":313,"title":{},"body":{"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["declarations",{"_index":113,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AppController.html":{},"controllers/BuildController.html":{},"controllers/SessionsController.html":{}}}],["default",{"_index":285,"title":{},"body":{"classes/GlobalService.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["deg2rad",{"_index":235,"title":{},"body":{"injectables/BuildService.html":{}}}],["deg2rad(node1.lat",{"_index":239,"title":{},"body":{"injectables/BuildService.html":{}}}],["deg2rad(node1.lon",{"_index":240,"title":{},"body":{"injectables/BuildService.html":{}}}],["deg2rad(node2.lat",{"_index":242,"title":{},"body":{"injectables/BuildService.html":{}}}],["deg2rad(node2.lon",{"_index":243,"title":{},"body":{"injectables/BuildService.html":{}}}],["delete",{"_index":54,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["delete(\"/first",{"_index":105,"title":{},"body":{"controllers/AddressesController.html":{}}}],["delete('/first",{"_index":58,"title":{},"body":{"controllers/AddressesController.html":{}}}],["deleteaddress",{"_index":39,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["deleteaddress(@body",{"_index":95,"title":{},"body":{"controllers/AddressesController.html":{}}}],["deleteaddress(body",{"_index":53,"title":{},"body":{"controllers/AddressesController.html":{}}}],["deleteaddress(session_token",{"_index":132,"title":{},"body":{"injectables/AddressesService.html":{}}}],["deleted",{"_index":164,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/SessionsService.html":{}}}],["deletefirstaddress",{"_index":40,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["deletefirstaddress(@body",{"_index":106,"title":{},"body":{"controllers/AddressesController.html":{}}}],["deletefirstaddress(body",{"_index":56,"title":{},"body":{"controllers/AddressesController.html":{}}}],["deletefirstaddress(session_token",{"_index":134,"title":{},"body":{"injectables/AddressesService.html":{}}}],["deletesession",{"_index":314,"title":{},"body":{"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["deletesession(@body",{"_index":329,"title":{},"body":{"controllers/SessionsController.html":{}}}],["deletesession(body",{"_index":317,"title":{},"body":{"controllers/SessionsController.html":{}}}],["deletesession(session_token",{"_index":337,"title":{},"body":{"injectables/SessionsService.html":{}}}],["dependencies",{"_index":111,"title":{"dependencies.html":{}},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":389,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":398,"title":{},"body":{"index.html":{}}}],["diff",{"_index":244,"title":{},"body":{"injectables/BuildService.html":{}}}],["dist",{"_index":259,"title":{},"body":{"injectables/BuildService.html":{}}}],["doc_info",{"_index":196,"title":{},"body":{"injectables/AppService.html":{}}}],["docs",{"_index":178,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["documentation",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":159,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["dto/addressdeleteget.dto",{"_index":74,"title":{},"body":{"controllers/AddressesController.html":{}}}],["dto/addresspost.dto",{"_index":73,"title":{},"body":{"controllers/AddressesController.html":{}}}],["dto/session_token.dto",{"_index":80,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/BuildController.html":{},"controllers/SessionsController.html":{}}}],["e.connexion",{"_index":263,"title":{},"body":{"injectables/BuildService.html":{}}}],["e.id",{"_index":163,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{}}}],["e2e",{"_index":409,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":384,"title":{},"body":{"index.html":{}}}],["error",{"_index":147,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["exist",{"_index":170,"title":{},"body":{"injectables/AddressesService.html":{}}}],["exists",{"_index":160,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["export",{"_index":18,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{}}}],["exports",{"_index":116,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}],["express",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":148,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"injectables/SessionsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["first",{"_index":98,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["first_graph_node",{"_index":295,"title":{},"body":{"interfaces/Graph.html":{},"injectables/SessionsService.html":{}}}],["flag",{"_index":268,"title":{},"body":{"injectables/BuildService.html":{},"classes/GlobalService.html":{}}}],["for(let",{"_index":264,"title":{},"body":{"injectables/BuildService.html":{}}}],["found",{"_index":341,"title":{},"body":{"injectables/SessionsService.html":{}}}],["framework",{"_index":382,"title":{},"body":{"index.html":{}}}],["function",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":376,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(\"/first",{"_index":102,"title":{},"body":{"controllers/AddressesController.html":{}}}],["get('/first",{"_index":64,"title":{},"body":{"controllers/AddressesController.html":{}}}],["getaddress",{"_index":41,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["getaddress(@body",{"_index":92,"title":{},"body":{"controllers/AddressesController.html":{}}}],["getaddress(body",{"_index":61,"title":{},"body":{"controllers/AddressesController.html":{}}}],["getaddress(session_token",{"_index":136,"title":{},"body":{"injectables/AddressesService.html":{}}}],["getfirstaddress",{"_index":42,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["getfirstaddress(@body",{"_index":103,"title":{},"body":{"controllers/AddressesController.html":{}}}],["getfirstaddress(body",{"_index":63,"title":{},"body":{"controllers/AddressesController.html":{}}}],["getfirstaddress(session_token",{"_index":138,"title":{},"body":{"injectables/AddressesService.html":{}}}],["getsession",{"_index":315,"title":{},"body":{"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["getsession(@body",{"_index":326,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsession(body",{"_index":319,"title":{},"body":{"controllers/SessionsController.html":{}}}],["getsession(session_token",{"_index":339,"title":{},"body":{"injectables/SessionsService.html":{}}}],["getted",{"_index":169,"title":{},"body":{"injectables/AddressesService.html":{}}}],["getting",{"_index":378,"title":{"index.html":{}},"body":{}}],["globalservice",{"_index":142,"title":{"classes/GlobalService.html":{}},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["globalservice.session[session_token",{"_index":276,"title":{},"body":{"injectables/BuildService.html":{},"classes/GlobalService.html":{},"injectables/SessionsService.html":{}}}],["globalservice.session[session_token].first_graph_node",{"_index":172,"title":{},"body":{"injectables/AddressesService.html":{}}}],["globalservice.session[session_token].list_graph_node",{"_index":161,"title":{},"body":{"injectables/AddressesService.html":{}}}],["globalservice.session[session_token].list_graph_node.filter((e",{"_index":162,"title":{},"body":{"injectables/AddressesService.html":{}}}],["globalservice.session[session_token].list_graph_node.find((e",{"_index":167,"title":{},"body":{"injectables/AddressesService.html":{}}}],["globalservice.session[session_token].list_graph_node.push(node",{"_index":150,"title":{},"body":{"injectables/AddressesService.html":{}}}],["globalservice.sessionexist(session_token",{"_index":145,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["graph",{"_index":222,"title":{"interfaces/Graph.html":{}},"body":{"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"coverage.html":{}}}],["graph_node.interface",{"_index":299,"title":{},"body":{"interfaces/Graph.html":{}}}],["graphnode",{"_index":75,"title":{"interfaces/GraphNode.html":{}},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["grow",{"_index":416,"title":{},"body":{"index.html":{}}}],["here",{"_index":427,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":434,"title":{},"body":{"index.html":{}}}],["id",{"_index":86,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"interfaces/GraphNode.html":{},"injectables/SessionsService.html":{}}}],["identifier",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["if(flag",{"_index":273,"title":{},"body":{"injectables/BuildService.html":{}}}],["if(globalservice.session[session_token",{"_index":291,"title":{},"body":{"classes/GlobalService.html":{}}}],["if(res",{"_index":168,"title":{},"body":{"injectables/AddressesService.html":{}}}],["if(sessionexist.flag",{"_index":149,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["import",{"_index":69,"title":{},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{}}}],["imports",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{}}}],["initconnexionobject",{"_index":218,"title":{},"body":{"injectables/BuildService.html":{}}}],["initconnexionobject(session",{"_index":232,"title":{},"body":{"injectables/BuildService.html":{}}}],["injectable",{"_index":124,"title":{"injectables/AddressesService.html":{},"injectables/AppService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}},"body":{"injectables/AddressesService.html":{},"injectables/AppService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["injectables",{"_index":125,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AppService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{},"overview.html":{}}}],["installation",{"_index":394,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":396,"title":{},"body":{"index.html":{}}}],["interface",{"_index":292,"title":{"interfaces/Graph.html":{},"interfaces/GraphNode.html":{}},"body":{"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"coverage.html":{}}}],["interfaces",{"_index":293,"title":{},"body":{"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"overview.html":{}}}],["interfaces/graph.interface",{"_index":290,"title":{},"body":{"classes/GlobalService.html":{}}}],["item[0",{"_index":269,"title":{},"body":{"injectables/BuildService.html":{}}}],["join",{"_index":423,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":431,"title":{},"body":{"index.html":{}}}],["label",{"_index":23,"title":{},"body":{"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"interfaces/GraphNode.html":{}}}],["lat",{"_index":24,"title":{},"body":{"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"injectables/BuildService.html":{},"interfaces/GraphNode.html":{}}}],["legend",{"_index":112,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}],["license",{"_index":437,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":413,"title":{},"body":{"index.html":{}}}],["list_graph_node",{"_index":296,"title":{},"body":{"interfaces/Graph.html":{},"injectables/SessionsService.html":{}}}],["literal",{"_index":302,"title":{},"body":{"interfaces/GraphNode.html":{}}}],["lon",{"_index":25,"title":{},"body":{"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"injectables/BuildService.html":{},"interfaces/GraphNode.html":{}}}],["made",{"_index":280,"title":{},"body":{"injectables/BuildService.html":{}}}],["matching",{"_index":20,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.asin(math.sqrt(calc",{"_index":256,"title":{},"body":{"injectables/BuildService.html":{}}}],["math.cos(rad_node1.lat",{"_index":252,"title":{},"body":{"injectables/BuildService.html":{}}}],["math.cos(rad_node2.lat",{"_index":253,"title":{},"body":{"injectables/BuildService.html":{}}}],["math.pi/180",{"_index":237,"title":{},"body":{"injectables/BuildService.html":{}}}],["math.sin(diff.lat",{"_index":250,"title":{},"body":{"injectables/BuildService.html":{}}}],["math.sin(diff.lon",{"_index":254,"title":{},"body":{"injectables/BuildService.html":{}}}],["message",{"_index":146,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["message.info",{"_index":151,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{}}}],["message.session",{"_index":344,"title":{},"body":{"injectables/SessionsService.html":{}}}],["message.status",{"_index":155,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{}}}],["message[\"first_node",{"_index":174,"title":{},"body":{"injectables/AddressesService.html":{}}}],["message[\"info",{"_index":157,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["message[\"node",{"_index":154,"title":{},"body":{"injectables/AddressesService.html":{}}}],["message[\"node_id",{"_index":165,"title":{},"body":{"injectables/AddressesService.html":{}}}],["message[\"ordered_graph",{"_index":281,"title":{},"body":{"injectables/BuildService.html":{}}}],["message[\"session_token",{"_index":343,"title":{},"body":{"injectables/SessionsService.html":{}}}],["message[\"status",{"_index":342,"title":{},"body":{"injectables/SessionsService.html":{}}}],["metadata",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":37,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["miscellaneous",{"_index":375,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":412,"title":{},"body":{"index.html":{}}}],["mode",{"_index":402,"title":{},"body":{"index.html":{}}}],["module",{"_index":108,"title":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{}},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}],["modules",{"_index":110,"title":{"modules.html":{}},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":426,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":432,"title":{},"body":{"index.html":{}}}],["n",{"_index":236,"title":{},"body":{"injectables/BuildService.html":{}}}],["name",{"_index":49,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["nest",{"_index":390,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":436,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":70,"title":{},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["node",{"_index":85,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["node.js",{"_index":381,"title":{},"body":{"index.html":{}}}],["node1",{"_index":229,"title":{},"body":{"injectables/BuildService.html":{}}}],["node1.connexion[node2.id",{"_index":260,"title":{},"body":{"injectables/BuildService.html":{}}}],["node2",{"_index":227,"title":{},"body":{"injectables/BuildService.html":{}}}],["node2.connexion[node1.id",{"_index":261,"title":{},"body":{"injectables/BuildService.html":{}}}],["npm",{"_index":395,"title":{},"body":{"index.html":{}}}],["null",{"_index":175,"title":{},"body":{"injectables/AddressesService.html":{},"classes/GlobalService.html":{},"injectables/SessionsService.html":{}}}],["number",{"_index":27,"title":{},"body":{"classes/AddressPostDTO.html":{},"injectables/BuildService.html":{},"interfaces/GraphNode.html":{}}}],["object",{"_index":284,"title":{},"body":{"classes/GlobalService.html":{}}}],["open",{"_index":414,"title":{},"body":{"index.html":{}}}],["optional",{"_index":50,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["ordered_graph",{"_index":297,"title":{},"body":{"interfaces/Graph.html":{}}}],["out",{"_index":121,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}],["overview",{"_index":441,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":365,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":321,"title":{},"body":{"controllers/SessionsController.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["please",{"_index":424,"title":{},"body":{"index.html":{}}}],["post",{"_index":46,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/SessionsController.html":{}}}],["post(\"/first",{"_index":99,"title":{},"body":{"controllers/AddressesController.html":{}}}],["post('/first",{"_index":67,"title":{},"body":{"controllers/AddressesController.html":{}}}],["prefix",{"_index":35,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/BuildController.html":{},"controllers/SessionsController.html":{}}}],["production",{"_index":404,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":380,"title":{},"body":{"index.html":{}}}],["project",{"_index":415,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"properties.html":{}}}],["providers",{"_index":115,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}],["r",{"_index":257,"title":{},"body":{"injectables/BuildService.html":{}}}],["rad_node1",{"_index":238,"title":{},"body":{"injectables/BuildService.html":{}}}],["rad_node1.lat",{"_index":246,"title":{},"body":{"injectables/BuildService.html":{}}}],["rad_node1.lon",{"_index":248,"title":{},"body":{"injectables/BuildService.html":{}}}],["rad_node2",{"_index":241,"title":{},"body":{"injectables/BuildService.html":{}}}],["rad_node2.lat",{"_index":245,"title":{},"body":{"injectables/BuildService.html":{}}}],["rad_node2.lon",{"_index":247,"title":{},"body":{"injectables/BuildService.html":{}}}],["read",{"_index":425,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":9,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"controllers/AppController.html":{},"controllers/BuildController.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{}}}],["reflect",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":393,"title":{},"body":{"index.html":{}}}],["res",{"_index":166,"title":{},"body":{"injectables/AddressesService.html":{}}}],["reset",{"_index":120,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}],["results",{"_index":19,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":90,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["returns",{"_index":52,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{}}}],["run",{"_index":399,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":385,"title":{},"body":{"index.html":{}}}],["server",{"_index":386,"title":{},"body":{"index.html":{}}}],["session",{"_index":224,"title":{},"body":{"injectables/BuildService.html":{},"classes/GlobalService.html":{},"injectables/SessionsService.html":{}}}],["session's",{"_index":158,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["session.list_graph_node.foreach((e",{"_index":262,"title":{},"body":{"injectables/BuildService.html":{}}}],["session.ordered_graph",{"_index":274,"title":{},"body":{"injectables/BuildService.html":{}}}],["session_token",{"_index":11,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"injectables/SessionsService.html":{}}}],["sessionexist",{"_index":144,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"injectables/SessionsService.html":{}}}],["sessionexist(session_token",{"_index":288,"title":{},"body":{"classes/GlobalService.html":{}}}],["sessions",{"_index":312,"title":{},"body":{"controllers/SessionsController.html":{}}}],["sessions.controller",{"_index":334,"title":{},"body":{"modules/SessionsModule.html":{}}}],["sessions.service",{"_index":323,"title":{},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{}}}],["sessions/sessions.module",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["sessionscontroller",{"_index":310,"title":{"controllers/SessionsController.html":{}},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"coverage.html":{}}}],["sessionservice",{"_index":325,"title":{},"body":{"controllers/SessionsController.html":{}}}],["sessionsmodule",{"_index":188,"title":{"modules/SessionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SessionsModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionsservice",{"_index":322,"title":{"injectables/SessionsService.html":{}},"body":{"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"coverage.html":{},"overview.html":{}}}],["sessiontokendto",{"_index":57,"title":{"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{}},"body":{"controllers/AddressesController.html":{},"controllers/BuildController.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"coverage.html":{}}}],["set",{"_index":171,"title":{},"body":{"injectables/AddressesService.html":{}}}],["setfirstaddress",{"_index":43,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["setfirstaddress(@body",{"_index":100,"title":{},"body":{"controllers/AddressesController.html":{}}}],["setfirstaddress(body",{"_index":66,"title":{},"body":{"controllers/AddressesController.html":{}}}],["setfirstaddress(session_token",{"_index":140,"title":{},"body":{"injectables/AddressesService.html":{}}}],["setted",{"_index":173,"title":{},"body":{"injectables/AddressesService.html":{}}}],["side",{"_index":387,"title":{},"body":{"index.html":{}}}],["soon",{"_index":199,"title":{},"body":{"injectables/AppService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BuildController.html":{},"modules/BuildModule.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"modules/SessionsModule.html":{},"injectables/SessionsService.html":{},"index.html":{}}}],["sponsors",{"_index":418,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/addresses/addresses.controller.ts",{"_index":34,"title":{},"body":{"controllers/AddressesController.html":{},"coverage.html":{}}}],["src/addresses/addresses.controller.ts:15",{"_index":47,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/addresses/addresses.controller.ts:28",{"_index":62,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/addresses/addresses.controller.ts:33",{"_index":55,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/addresses/addresses.controller.ts:39",{"_index":68,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/addresses/addresses.controller.ts:44",{"_index":65,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/addresses/addresses.controller.ts:49",{"_index":60,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/addresses/addresses.module.ts",{"_index":122,"title":{},"body":{"modules/AddressesModule.html":{}}}],["src/addresses/addresses.service.ts",{"_index":126,"title":{},"body":{"injectables/AddressesService.html":{},"coverage.html":{}}}],["src/addresses/addresses.service.ts:131",{"_index":139,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/addresses/addresses.service.ts:166",{"_index":135,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/addresses/addresses.service.ts:36",{"_index":133,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/addresses/addresses.service.ts:63",{"_index":137,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/addresses/addresses.service.ts:9",{"_index":128,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/addresses/addresses.service.ts:97",{"_index":141,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/addresses/dto/addressdeleteget.dto.ts",{"_index":6,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"coverage.html":{}}}],["src/addresses/dto/addressdeleteget.dto.ts:2",{"_index":17,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{}}}],["src/addresses/dto/addressdeleteget.dto.ts:3",{"_index":16,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{}}}],["src/addresses/dto/addresspost.dto.ts",{"_index":22,"title":{},"body":{"classes/AddressPostDTO.html":{},"coverage.html":{}}}],["src/addresses/dto/addresspost.dto.ts:2",{"_index":30,"title":{},"body":{"classes/AddressPostDTO.html":{}}}],["src/addresses/dto/addresspost.dto.ts:3",{"_index":26,"title":{},"body":{"classes/AddressPostDTO.html":{}}}],["src/addresses/dto/addresspost.dto.ts:4",{"_index":29,"title":{},"body":{"classes/AddressPostDTO.html":{}}}],["src/addresses/dto/addresspost.dto.ts:5",{"_index":28,"title":{},"body":{"classes/AddressPostDTO.html":{}}}],["src/addresses/dto/session_token.dto.ts",{"_index":303,"title":{},"body":{"classes/SessionTokenDTO.html":{},"coverage.html":{}}}],["src/addresses/dto/session_token.dto.ts:2",{"_index":304,"title":{},"body":{"classes/SessionTokenDTO.html":{}}}],["src/app.controller.ts",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":197,"title":{},"body":{"injectables/AppService.html":{}}}],["src/build/build.controller.ts",{"_index":201,"title":{},"body":{"controllers/BuildController.html":{},"coverage.html":{}}}],["src/build/build.controller.ts:10",{"_index":204,"title":{},"body":{"controllers/BuildController.html":{}}}],["src/build/build.module.ts",{"_index":212,"title":{},"body":{"modules/BuildModule.html":{}}}],["src/build/build.service.ts",{"_index":214,"title":{},"body":{"injectables/BuildService.html":{},"coverage.html":{}}}],["src/build/build.service.ts:104",{"_index":220,"title":{},"body":{"injectables/BuildService.html":{}}}],["src/build/build.service.ts:33",{"_index":233,"title":{},"body":{"injectables/BuildService.html":{}}}],["src/build/build.service.ts:39",{"_index":223,"title":{},"body":{"injectables/BuildService.html":{}}}],["src/build/build.service.ts:59",{"_index":231,"title":{},"body":{"injectables/BuildService.html":{}}}],["src/build/build.service.ts:9",{"_index":228,"title":{},"body":{"injectables/BuildService.html":{}}}],["src/build/dto/session_token.dto.ts",{"_index":308,"title":{},"body":{"classes/SessionTokenDTO-2.html":{},"coverage.html":{}}}],["src/build/dto/session_token.dto.ts:2",{"_index":309,"title":{},"body":{"classes/SessionTokenDTO-2.html":{}}}],["src/global.service",{"_index":143,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["src/global.service.ts",{"_index":282,"title":{},"body":{"classes/GlobalService.html":{},"coverage.html":{}}}],["src/global.service.ts:5",{"_index":287,"title":{},"body":{"classes/GlobalService.html":{}}}],["src/global.service.ts:7",{"_index":289,"title":{},"body":{"classes/GlobalService.html":{}}}],["src/interfaces/graph.interface",{"_index":234,"title":{},"body":{"injectables/BuildService.html":{}}}],["src/interfaces/graph.interface.ts",{"_index":294,"title":{},"body":{"interfaces/Graph.html":{},"coverage.html":{}}}],["src/interfaces/graph_node.interface",{"_index":76,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"injectables/BuildService.html":{}}}],["src/interfaces/graph_node.interface.ts",{"_index":300,"title":{},"body":{"interfaces/GraphNode.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":358,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/sessions/dto/session_token.dto.ts",{"_index":306,"title":{},"body":{"classes/SessionTokenDTO-1.html":{},"coverage.html":{}}}],["src/sessions/dto/session_token.dto.ts:2",{"_index":307,"title":{},"body":{"classes/SessionTokenDTO-1.html":{}}}],["src/sessions/sessions.controller.ts",{"_index":311,"title":{},"body":{"controllers/SessionsController.html":{},"coverage.html":{}}}],["src/sessions/sessions.controller.ts:11",{"_index":320,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/sessions/sessions.controller.ts:16",{"_index":316,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/sessions/sessions.controller.ts:21",{"_index":318,"title":{},"body":{"controllers/SessionsController.html":{}}}],["src/sessions/sessions.module.ts",{"_index":333,"title":{},"body":{"modules/SessionsModule.html":{}}}],["src/sessions/sessions.service.ts",{"_index":335,"title":{},"body":{"injectables/SessionsService.html":{},"coverage.html":{}}}],["src/sessions/sessions.service.ts:34",{"_index":336,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/sessions/sessions.service.ts:62",{"_index":338,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/sessions/sessions.service.ts:8",{"_index":340,"title":{},"body":{"injectables/SessionsService.html":{}}}],["start",{"_index":400,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":403,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":405,"title":{},"body":{"index.html":{}}}],["started",{"_index":379,"title":{"index.html":{}},"body":{}}],["starter",{"_index":392,"title":{},"body":{"index.html":{}}}],["statements",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":283,"title":{},"body":{"classes/GlobalService.html":{}}}],["status",{"_index":130,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"injectables/SessionsService.html":{}}}],["stay",{"_index":428,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"injectables/AddressesService.html":{},"injectables/AppService.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"injectables/SessionsService.html":{}}}],["support",{"_index":419,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":439,"title":{},"body":{"modules.html":{}}}],["table",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":408,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":411,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":410,"title":{},"body":{"index.html":{}}}],["tests",{"_index":407,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":417,"title":{},"body":{"index.html":{}}}],["this.addressesservice.addaddress(body.session_token",{"_index":91,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressesservice.deleteaddress(body.session_token",{"_index":96,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressesservice.deletefirstaddress(body.session_token",{"_index":107,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressesservice.getaddress(body.session_token",{"_index":93,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressesservice.getfirstaddress(body.session_token",{"_index":104,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressesservice.setfirstaddress(body.session_token",{"_index":101,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.appservice.doc_info",{"_index":182,"title":{},"body":{"controllers/AppController.html":{}}}],["this.buildservice.build(body.session_token",{"_index":209,"title":{},"body":{"controllers/BuildController.html":{}}}],["this.calcalldistance(session",{"_index":278,"title":{},"body":{"injectables/BuildService.html":{}}}],["this.createorderedgraph(session",{"_index":279,"title":{},"body":{"injectables/BuildService.html":{}}}],["this.initconnexionobject(session",{"_index":277,"title":{},"body":{"injectables/BuildService.html":{}}}],["this.sessionservice.createsession",{"_index":328,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessionservice.deletesession(body.session_token",{"_index":330,"title":{},"body":{"controllers/SessionsController.html":{}}}],["this.sessionservice.getsession(body.session_token",{"_index":327,"title":{},"body":{"controllers/SessionsController.html":{}}}],["touch",{"_index":429,"title":{},"body":{"index.html":{}}}],["true",{"_index":156,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"injectables/SessionsService.html":{}}}],["try",{"_index":346,"title":{},"body":{"injectables/SessionsService.html":{}}}],["twitter",{"_index":435,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/AddressDeleteGetDTO.html":{},"classes/AddressPostDTO.html":{},"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/BuildController.html":{},"injectables/BuildService.html":{},"classes/GlobalService.html":{},"interfaces/Graph.html":{},"interfaces/GraphNode.html":{},"classes/SessionTokenDTO.html":{},"classes/SessionTokenDTO-1.html":{},"classes/SessionTokenDTO-2.html":{},"controllers/SessionsController.html":{},"injectables/SessionsService.html":{},"coverage.html":{}}}],["typescript",{"_index":391,"title":{},"body":{"index.html":{}}}],["unit",{"_index":406,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":446,"title":{},"body":{"properties.html":{}}}],["uuid",{"_index":79,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/SessionsService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":78,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/SessionsService.html":{}}}],["v4",{"_index":77,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/SessionsService.html":{}}}],["value",{"_index":286,"title":{},"body":{"classes/GlobalService.html":{}}}],["version",{"_index":444,"title":{},"body":{"properties.html":{}}}],["visited",{"_index":275,"title":{},"body":{"injectables/BuildService.html":{}}}],["visited.push(add",{"_index":271,"title":{},"body":{"injectables/BuildService.html":{}}}],["visited_id.push(add.id",{"_index":270,"title":{},"body":{"injectables/BuildService.html":{}}}],["void",{"_index":225,"title":{},"body":{"injectables/BuildService.html":{}}}],["watch",{"_index":401,"title":{},"body":{"index.html":{}}}],["website",{"_index":433,"title":{},"body":{"index.html":{}}}],["write",{"_index":198,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":422,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":119,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/BuildModule.html":{},"modules/SessionsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddressDeleteGetDTO.html":{"url":"classes/AddressDeleteGetDTO.html","title":"class - AddressDeleteGetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressDeleteGetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/addresses/dto/addressDeleteGet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address_id\n                            \n                            \n                                    Readonly\n                                session_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        address_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/addresses/dto/addressDeleteGet.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        session_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/addresses/dto/addressDeleteGet.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressDeleteGetDTO{\n    readonly session_token: string\n    readonly address_id : string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressPostDTO.html":{"url":"classes/AddressPostDTO.html","title":"class - AddressPostDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressPostDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/addresses/dto/addressPost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                label\n                            \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                lon\n                            \n                            \n                                    Readonly\n                                session_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/addresses/dto/addressPost.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/addresses/dto/addressPost.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/addresses/dto/addressPost.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        session_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/addresses/dto/addressPost.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressPostDTO{\n    readonly session_token: string\n    readonly label: string\n    readonly lon: number\n    readonly lat: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddressesController.html":{"url":"controllers/AddressesController.html","title":"controller - AddressesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddressesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/addresses/addresses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                addresses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAddress\n                            \n                            \n                                deleteAddress\n                            \n                            \n                                deleteFirstAddress\n                            \n                            \n                                getAddress\n                            \n                            \n                                getFirstAddress\n                            \n                            \n                                setFirstAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAddress\n                        \n                    \n                \n            \n            \n                \naddAddress(body: AddressPostDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/addresses/addresses.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AddressPostDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAddress\n                        \n                    \n                \n            \n            \n                \ndeleteAddress(body: AddressDeleteGetDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/addresses/addresses.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AddressDeleteGetDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFirstAddress\n                        \n                    \n                \n            \n            \n                \ndeleteFirstAddress(body: SessionTokenDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/first-address')\n                \n            \n\n            \n                \n                    Defined in src/addresses/addresses.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                SessionTokenDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress(body: AddressDeleteGetDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/addresses/addresses.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AddressDeleteGetDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstAddress\n                        \n                    \n                \n            \n            \n                \ngetFirstAddress(body: SessionTokenDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/first-address')\n                \n            \n\n            \n                \n                    Defined in src/addresses/addresses.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                SessionTokenDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFirstAddress\n                        \n                    \n                \n            \n            \n                \nsetFirstAddress(body: AddressDeleteGetDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/first-address')\n                \n            \n\n            \n                \n                    Defined in src/addresses/addresses.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AddressDeleteGetDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Get, Delete } from '@nestjs/common';\nimport { AddressesService } from './addresses.service';\nimport { AddressPostDTO } from './dto/addressPost.dto';\nimport { AddressDeleteGetDTO } from './dto/addressDeleteGet.dto';\nimport { GraphNode } from 'src/interfaces/graph_node.interface';\nimport { v4 as uuidv4 } from 'uuid';\nimport { SessionTokenDTO } from './dto/session_token.dto';\n\n@Controller('addresses')\nexport class AddressesController {\n\n    constructor(private readonly addressesService: AddressesService){}\n\n    @Post()\n    addAddress(@Body() body: AddressPostDTO){\n\n        const node: GraphNode = {\n            id : uuidv4(),\n            label : body.label,\n            lon : body.lon,\n            lat : body.lat\n        }\n        \n        return this.addressesService.addAddress(body.session_token, node)\n    }\n\n    @Get()\n    getAddress(@Body() body : AddressDeleteGetDTO){\n        return this.addressesService.getAddress(body.session_token, body.address_id)\n    }\n\n    @Delete()\n    deleteAddress(@Body() body: AddressDeleteGetDTO){\n        return this.addressesService.deleteAddress(body.session_token, body.address_id)\n    }\n    \n    // Add first\n    @Post(\"/first-address\")\n    setFirstAddress(@Body() body: AddressDeleteGetDTO){        \n        return this.addressesService.setFirstAddress(body.session_token, body.address_id)\n    }\n\n    @Get(\"/first-address\")\n    getFirstAddress(@Body() body : SessionTokenDTO){\n        return this.addressesService.getFirstAddress(body.session_token)\n    }\n\n    @Delete(\"/first-address\")\n    deleteFirstAddress(@Body() body: SessionTokenDTO){\n        return this.addressesService.deleteFirstAddress(body.session_token)\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddressesModule.html":{"url":"modules/AddressesModule.html","title":"module - AddressesModule","body":"\n                   \n\n\n\n\n    Modules\n    AddressesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressesModule\n\n\n\ncluster_AddressesModule_providers\n\n\n\n\nAddressesService\n\nAddressesService\n\n\n\nAddressesModule\n\nAddressesModule\n\nAddressesModule -->\n\nAddressesService->AddressesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/addresses/addresses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddressesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddressesController } from './addresses.controller';\nimport { AddressesService } from './addresses.service';\n\n@Module({\n  controllers: [AddressesController],\n  providers: [AddressesService]\n})\nexport class AddressesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressesService.html":{"url":"injectables/AddressesService.html","title":"injectable - AddressesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/addresses/addresses.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAddress\n                            \n                            \n                                deleteAddress\n                            \n                            \n                                deleteFirstAddress\n                            \n                            \n                                getAddress\n                            \n                            \n                                getFirstAddress\n                            \n                            \n                                setFirstAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAddress\n                        \n                    \n                \n            \n            \n                \naddAddress(session_token: string, node: GraphNode)\n                \n            \n\n\n            \n                \n                    Defined in src/addresses/addresses.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n                                    \n                                                GraphNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAddress\n                        \n                    \n                \n            \n            \n                \ndeleteAddress(session_token: string, address_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/addresses/addresses.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFirstAddress\n                        \n                    \n                \n            \n            \n                \ndeleteFirstAddress(session_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/addresses/addresses.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress(session_token: string, address_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/addresses/addresses.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstAddress\n                        \n                    \n                \n            \n            \n                \ngetFirstAddress(session_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/addresses/addresses.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFirstAddress\n                        \n                    \n                \n            \n            \n                \nsetFirstAddress(session_token: string, address_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/addresses/addresses.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GlobalService } from 'src/global.service';\nimport { GraphNode } from 'src/interfaces/graph_node.interface';\n\n@Injectable()\nexport class AddressesService {\n\n\n    addAddress(session_token: string, node: GraphNode){\n        const sessionExist = GlobalService.sessionExist(session_token)\n\n        let message = {\n            \"action\" : \"add address\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : session_token\n        }\n\n        if(sessionExist.flag){\n\n            GlobalService.SESSION[session_token].list_graph_node.push(node)\n            \n            message.info = \"node correctly added\"\n            message[\"node\"] = node\n            message.status = true\n\n            return message\n        }\n        else{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n\n    }\n\n    deleteAddress(session_token: string, address_id: string){\n        const sessionExist = GlobalService.sessionExist(session_token)\n\n        let message = {\n            \"action\" : \"delete address\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : session_token\n        }\n\n        if(sessionExist.flag){\n\n            GlobalService.SESSION[session_token].list_graph_node = GlobalService.SESSION[session_token].list_graph_node.filter((e: GraphNode) => {e.id === address_id})\n            \n            message.info = \"node correctly deleted\"\n            message.status = true\n            message[\"node_id\"] = address_id\n\n            return message\n        }\n        else{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n\n    }\n\n    getAddress(session_token: string, address_id: string){\n        const sessionExist = GlobalService.sessionExist(session_token)\n\n        let message = {\n            \"action\" : \"delete address\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : session_token\n        }\n\n        if(sessionExist.flag){\n\n            let res = GlobalService.SESSION[session_token].list_graph_node.find((e: GraphNode) => e.id === address_id)\n\n            if(res){            \n                message.info = \"node correctly getted\"\n                message.status = true\n                message[\"node_id\"] = address_id\n                message[\"node\"] = res\n            }\n            else{\n                message.info = \"address id doesn't exist\"\n            }   \n\n            return message\n        }\n        else{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n\n    }\n\n    // First address\n    setFirstAddress(session_token: string, address_id: string){\n        const sessionExist = GlobalService.sessionExist(session_token)\n\n        let message = {\n            \"action\" : \"set first node\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : session_token\n        }\n\n        if(sessionExist.flag){\n            let res = GlobalService.SESSION[session_token].list_graph_node.find((e: GraphNode) => e.id === address_id)\n\n            if(res){\n                GlobalService.SESSION[session_token].first_graph_node = res\n                \n                message.info = \"first node correctly setted\"\n                message.status = true\n                message[\"node_id\"] = address_id\n                message[\"first_node\"] = GlobalService.SESSION[session_token].first_graph_node\n            }\n            else{\n                message.info = \"address id doesn't exists\"\n            }\n\n            return message\n        }\n        else{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n\n    }\n\n    getFirstAddress(session_token: string){\n        const sessionExist = GlobalService.sessionExist(session_token)\n\n        let message = {\n            \"action\" : \"get first node\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : session_token\n        }\n\n        if(sessionExist.flag){\n            let res = GlobalService.SESSION[session_token].first_graph_node\n\n            if(res){\n                \n                message.info = \"first node getted\"\n                message.status = true\n                message[\"first_node\"] = res\n            }\n            else{\n                message.status = false\n                message.info = \"no first node\"\n            }\n\n            return message\n        }\n        else{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n\n\n    }\n\n\n    deleteFirstAddress(session_token: string){\n        const sessionExist = GlobalService.sessionExist(session_token)\n\n        let message = {\n            \"action\" : \"delete first node\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : session_token\n        }\n\n        if(sessionExist.flag){\n            GlobalService.SESSION[session_token].first_graph_node = null\n                \n            message.info = \"first node deleted\"\n            message.status = true\n\n            return message\n        }\n        else{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n\n\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                docs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        docs\n                        \n                    \n                \n            \n            \n                \ndocs()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  docs(){\n    return this.appService.doc_info()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddressesModule\n\nAddressesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressesModule->AppModule\n\n\n\n\n\nBuildModule\n\nBuildModule\n\nAppModule -->\n\nBuildModule->AppModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressesModule\n                        \n                        \n                            BuildModule\n                        \n                        \n                            SessionsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { SessionsModule } from './sessions/sessions.module';\nimport { AddressesModule } from './addresses/addresses.module';\nimport { BuildModule } from './build/build.module';\n\n@Module({\n  imports: [SessionsModule, AddressesModule, BuildModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doc_info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        doc_info\n                        \n                    \n                \n            \n            \n                \ndoc_info()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { docs: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n\n  doc_info(){\n    return {\"docs\" : \"write soon\"}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BuildController.html":{"url":"controllers/BuildController.html","title":"controller - BuildController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BuildController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/build/build.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                build\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(body: SessionTokenDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/build/build.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                SessionTokenDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get } from '@nestjs/common';\nimport { BuildService } from './build.service';\nimport { SessionTokenDTO } from './dto/session_token.dto';\n\n@Controller('build')\nexport class BuildController {\n    constructor(private readonly buildService: BuildService){}\n\n    @Get()\n    build(@Body() body: SessionTokenDTO){\n        return this.buildService.build(body.session_token)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BuildModule.html":{"url":"modules/BuildModule.html","title":"module - BuildModule","body":"\n                   \n\n\n\n\n    Modules\n    BuildModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BuildModule\n\n\n\ncluster_BuildModule_providers\n\n\n\n\nBuildService\n\nBuildService\n\n\n\nBuildModule\n\nBuildModule\n\nBuildModule -->\n\nBuildService->BuildModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/build/build.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BuildService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BuildController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BuildService } from './build.service';\nimport { BuildController } from './build.controller';\n\n@Module({\n  providers: [BuildService],\n  controllers: [BuildController]\n})\nexport class BuildModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BuildService.html":{"url":"injectables/BuildService.html","title":"injectable - BuildService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BuildService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/build/build.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                            \n                                calcAllDistance\n                            \n                            \n                                calcDistance\n                            \n                            \n                                createOrderedGraph\n                            \n                            \n                                initConnexionObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(session_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/build/build.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcAllDistance\n                        \n                    \n                \n            \n            \n                \ncalcAllDistance(session: Graph)\n                \n            \n\n\n            \n                \n                    Defined in src/build/build.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcDistance\n                        \n                    \n                \n            \n            \n                \ncalcDistance(node1: GraphNode, node2: GraphNode)\n                \n            \n\n\n            \n                \n                    Defined in src/build/build.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node1\n                                    \n                                                GraphNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node2\n                                    \n                                                GraphNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrderedGraph\n                        \n                    \n                \n            \n            \n                \ncreateOrderedGraph(session: Graph)\n                \n            \n\n\n            \n                \n                    Defined in src/build/build.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initConnexionObject\n                        \n                    \n                \n            \n            \n                \ninitConnexionObject(session: Graph)\n                \n            \n\n\n            \n                \n                    Defined in src/build/build.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GlobalService } from 'src/global.service';\nimport { Graph } from 'src/interfaces/graph.interface';\nimport { GraphNode } from 'src/interfaces/graph_node.interface';\n\n@Injectable()\nexport class BuildService {\n\n    calcDistance(node1: GraphNode, node2: GraphNode){\n\n        const deg2rad = (n: number) => {\n            return n * (Math.PI/180)\n        }\n\n        const rad_node1 = {lat : deg2rad(node1.lat), lon : deg2rad(node1.lon)}\n        const rad_node2 = {lat : deg2rad(node2.lat), lon : deg2rad(node2.lon)}\n\n        const diff = {lat : rad_node2.lat - rad_node1.lat, lon : rad_node2.lon - rad_node1.lon}\n        \n        const calc = Math.sin(diff.lat / 2) ** 2 + Math.cos(rad_node1.lat) * Math.cos(rad_node2.lat) * Math.sin(diff.lon / 2) ** 2 \n        \n        const c = 2 * Math.asin(Math.sqrt(calc))\n        const r = 6371\n\n        const dist = c * r\n\n        node1.connexion[node2.id] = dist\n        node2.connexion[node1.id] = dist\n\n        return dist\n    }\n\n    initConnexionObject(session: Graph){\n        session.list_graph_node.forEach((e: GraphNode) => {\n            e.connexion = {}\n        })\n    }\n\n    calcAllDistance(session: Graph){\n        for(let i = 0; i  a[1] - b[1])\n            \n            let flag = true\n\n            for(let i = 0; i  e.id === item[0])\n\n                    visited_id.push(add.id)\n                    visited.push(add)\n\n                    flag = false\n\n                    break\n                }\n            }\n\n            if(flag){\n                break\n            }\n        }\n\n        session.ordered_graph = visited\n        return visited\n\n    }\n\n    build(session_token: string){\n        const sessionExist = GlobalService.sessionExist(session_token)\n\n        let message = {\n            \"action\" : \"build graph\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : session_token\n        }\n\n        if(sessionExist.flag){\n            \n            const session: Graph = GlobalService.SESSION[session_token]\n\n            this.initConnexionObject(session)\n            this.calcAllDistance(session)\n            this.createOrderedGraph(session)\n            \n            message.info = \"build correctly made\"\n            message.status = true\n            message[\"ordered_graph\"] = session.ordered_graph\n            \n            return message\n\n        }\n        else{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalService.html":{"url":"classes/GlobalService.html","title":"class - GlobalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/global.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                SESSION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sessionExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        SESSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/global.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sessionExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    sessionExist(session_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/global.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { flag: boolean; session_token: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Graph } from \"./interfaces/graph.interface\"\n\nexport class GlobalService{\n\n    static SESSION = {}\n\n    static sessionExist(session_token: string){\n        if(GlobalService.SESSION[session_token]){\n            return {flag : true, session_token: GlobalService.SESSION[session_token]}\n        }\n        else{\n            return {flag : false, session_token: null}\n        }\n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Graph.html":{"url":"interfaces/Graph.html","title":"interface - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/graph.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first_graph_node\n                                        \n                                \n                                \n                                        \n                                            list_graph_node\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ordered_graph\n                                        \n                                \n                                \n                                        \n                                            session_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first_graph_node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_graph_node:         GraphNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphNode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list_graph_node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        list_graph_node:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ordered_graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ordered_graph:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GraphNode } from \"./graph_node.interface\"\n\nexport interface Graph{\n    session_token: string\n    list_graph_node: Array\n    first_graph_node: GraphNode\n\n    ordered_graph? : Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphNode.html":{"url":"interfaces/GraphNode.html","title":"interface - GraphNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/graph_node.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            connexion\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connexion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connexion:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphNode{\n    id: string\n    label: string\n    lat: number\n    lon: number\n    \n    connexion? : {}\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionTokenDTO.html":{"url":"classes/SessionTokenDTO.html","title":"class - SessionTokenDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionTokenDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/addresses/dto/session_token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                session_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        session_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/addresses/dto/session_token.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SessionTokenDTO{\n    readonly session_token: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionTokenDTO-1.html":{"url":"classes/SessionTokenDTO-1.html","title":"class - SessionTokenDTO-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionTokenDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sessions/dto/session_token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                session_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        session_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/sessions/dto/session_token.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SessionTokenDTO{\n    readonly session_token: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionTokenDTO-2.html":{"url":"classes/SessionTokenDTO-2.html","title":"class - SessionTokenDTO-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionTokenDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/build/dto/session_token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                session_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        session_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/build/dto/session_token.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SessionTokenDTO{\n    readonly session_token: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SessionsController.html":{"url":"controllers/SessionsController.html","title":"controller - SessionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SessionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sessions/sessions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sessions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSession\n                            \n                            \n                                deleteSession\n                            \n                            \n                                getSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSession\n                        \n                    \n                \n            \n            \n                \ncreateSession()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/sessions/sessions.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(body: SessionTokenDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/sessions/sessions.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                SessionTokenDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSession\n                        \n                    \n                \n            \n            \n                \ngetSession(body: SessionTokenDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/sessions/sessions.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                SessionTokenDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Param, Delete, Body } from '@nestjs/common';\nimport { SessionsService } from './sessions.service';\nimport { SessionTokenDTO } from './dto/session_token.dto';\n\n@Controller('sessions')\nexport class SessionsController {\n\n    constructor(private readonly sessionService: SessionsService){}\n\n    @Get()\n    getSession(@Body() body : SessionTokenDTO){\n        return this.sessionService.getSession(body.session_token)\n    }\n\n    @Post()\n    createSession(){\n        return this.sessionService.createSession()\n    }\n\n    @Delete()\n    deleteSession(@Body() body : SessionTokenDTO){\n        return this.sessionService.deleteSession(body.session_token)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionsModule.html":{"url":"modules/SessionsModule.html","title":"module - SessionsModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_providers\n\n\n\n\nSessionsService\n\nSessionsService\n\n\n\nSessionsModule\n\nSessionsModule\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sessions/sessions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SessionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SessionsController } from './sessions.controller';\nimport { SessionsService } from './sessions.service';\n\n@Module({\n  controllers: [SessionsController],\n  providers: [SessionsService]\n})\nexport class SessionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sessions/sessions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSession\n                            \n                            \n                                deleteSession\n                            \n                            \n                                getSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSession\n                        \n                    \n                \n            \n            \n                \ncreateSession()\n                \n            \n\n\n            \n                \n                    Defined in src/sessions/sessions.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(session_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/sessions/sessions.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session_token: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSession\n                        \n                    \n                \n            \n            \n                \ngetSession(session_token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/sessions/sessions.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session_token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { action: string; info: string; status: boolean; session: any; session_token: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { GlobalService } from 'src/global.service';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable()\nexport class SessionsService {\n\n    getSession(session_token: string){\n        let message = {\n            \"action\" : \"get session\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session\" : null,\n            \"session_token\" : null\n        }\n        \n        const sessionExist = GlobalService.sessionExist(session_token)\n\n        if(sessionExist.flag){\n            message[\"info\"] = \"correctly found session\"\n            message[\"status\"] = true\n            message[\"session_token\"] = session_token\n            message.session = GlobalService.SESSION[session_token]\n\n            return message\n        }\n        else{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n\n    }\n\n    createSession(){\n        let message = {\n            \"action\" : \"create session\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : null\n        }    \n\n        try{\n            const session_token = uuidv4()\n            GlobalService.SESSION[session_token] = {\n                \"session_token\" : session_token,\n                \"list_graph_node\" : [],\n                \"first_graph_node\": null\n            }\n            \n            message[\"info\"] = \"correctly created\"\n            message[\"status\"] = true\n            message[\"session_token\"] = session_token\n\n            return message\n        }\n        catch{\n            return message\n        }\n\n    }\n\n    deleteSession(session_token: string){\n        let message = {\n            \"action\" : \"delete session\",\n            \"info\" : \"error\",\n            \"status\" : false,\n            \"session_token\" : session_token\n        }    \n        \n        try{\n            delete GlobalService.SESSION[session_token]\n\n            message[\"info\"] = \"correctly deleted\"\n            message[\"status\"] = true\n            \n            return message\n        }\n        catch{\n            message[\"info\"] = \"session's id doesn't exists\"\n            return message\n        }\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/addresses/addresses.controller.ts\n            \n            controller\n            AddressesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/addresses/addresses.service.ts\n            \n            injectable\n            AddressesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/addresses/dto/addressDeleteGet.dto.ts\n            \n            class\n            AddressDeleteGetDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/addresses/dto/addressPost.dto.ts\n            \n            class\n            AddressPostDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/addresses/dto/session_token.dto.ts\n            \n            class\n            SessionTokenDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/build/build.controller.ts\n            \n            controller\n            BuildController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/build/build.service.ts\n            \n            injectable\n            BuildService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/build/dto/session_token.dto.ts\n            \n            class\n            SessionTokenDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/global.service.ts\n            \n            class\n            GlobalService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/graph.interface.ts\n            \n            interface\n            Graph\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/graph_node.interface.ts\n            \n            interface\n            GraphNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sessions/dto/session_token.dto.ts\n            \n            class\n            SessionTokenDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sessions/sessions.controller.ts\n            \n            controller\n            SessionsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/sessions/sessions.service.ts\n            \n            injectable\n            SessionsService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddressesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BuildModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressesModule\n\n\n\ncluster_AddressesModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BuildModule\n\n\n\ncluster_BuildModule_providers\n\n\n\ncluster_SessionsModule\n\n\n\ncluster_SessionsModule_providers\n\n\n\n\nAddressesService\n\nAddressesService\n\n\n\nAddressesModule\n\nAddressesModule\n\nAddressesModule -->\n\nAddressesService->AddressesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressesModule->AppModule\n\n\n\n\n\nBuildModule\n\nBuildModule\n\nAppModule -->\n\nBuildModule->AppModule\n\n\n\n\n\nSessionsModule\n\nSessionsModule\n\nAppModule -->\n\nSessionsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBuildService\n\nBuildService\n\nBuildModule -->\n\nBuildService->BuildModule\n\n\n\n\n\nSessionsService\n\nSessionsService\n\nSessionsModule -->\n\nSessionsService->SessionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
